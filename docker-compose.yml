version: '3.9'

services:
  bot:
    build: . # Строим образ из текущей директории
    container_name: container_bot
    depends_on:
      - db # Контейнер бота зависит от базы данных (db)
      - redis # Контейнер бота зависит от Redis
      - influxdb # Контейнер бота зависит от InfluxDB
    environment:
      - DB_POST=postgresql+asyncpg://root:pass@db:5432/postgres # Параметры подключения к базе данных PostgreSQL
      - REDIS_HOST=redis # Хост для подключения к Redis
      - REDIS_PORT=6379 # Порт для подключения к Redis
      - INFLUXDB_URL=http://influxdb:8086 # URL для подключения к InfluxDB
      - INFLUXDB_TOKEN=mytoken # Токен для доступа к InfluxDB
      - INFLUXDB_ORG=myorg # Организация в InfluxDB
      - INFLUXDB_BUCKET=mybucket # Бакет в InfluxDB
    networks:
      - botnet # Подключение к сети botnet
    restart: unless-stopped # Автоматический перезапуск контейнера, если он остановится

  db:
    image: postgres:15 # Образ PostgreSQL версии 15
    container_name: container_bot_db
    environment:
      POSTGRES_USER: root # Пользователь базы данных PostgreSQL
      POSTGRES_PASSWORD: pass # Пароль для пользователя базы данных
      POSTGRES_DB: postgres # Имя базы данных
    volumes:
      - ./database/postgres:/var/lib/postgresql/data # Сохраняем данные базы данных на локальном диске
    ports:
      - "5432:5432" # Публикуем порт 5432 для доступа к базе данных
    networks:
      - botnet # Подключение к сети botnet
    restart: unless-stopped # Автоматический перезапуск контейнера, если он остановится

  redis:
    image: redis:alpine # Образ Redis версии Alpine
    container_name: container_redis # Имя контейнера для Redis
    ports:
      - "6379:6379" # Публикуем порт 6379 для доступа к Redis
    networks:
      - botnet # Подключение к сети botnet
    restart: unless-stopped # Автоматический перезапуск контейнера, если он остановится


  pgadmin:
    image: dpage/pgadmin4 # Образ pgAdmin для управления базой данных PostgreSQL
    container_name: container_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=noemail@noemail.com # Адрес электронной почты по умолчанию для входа в pgAdmin
      - PGADMIN_DEFAULT_PASSWORD=root # Пароль по умолчанию для входа в pgAdmin
    ports:
      - "5050:80" # Публикуем порт 5050 для доступа к pgAdmin через браузер
    networks:
      - botnet # Подключение к сети botnet
    restart: unless-stopped # Автоматический перезапуск контейнера, если он остановится

  influxdb:
    image: influxdb:2.7 # Образ InfluxDB версии 2.0
    container_name: container_influxdb
    environment:
      - INFLUXDB_ADMIN_USER=admin # Администратор InfluxDB
      - INFLUXDB_ADMIN_PASSWORD=pass # Пароль администратора InfluxDB
      - INFLUXDB_BUCKET=mybucket # Бакет для хранения данных
      - INFLUXDB_ORG=myorg # Название организации в InfluxDB
    volumes:
      - ./database/influxdb:/var/lib/influxdb2 # Сохраняем данные InfluxDB на локальном диске
    ports:
      - "8086:8086" # Публикуем порт 8086 для доступа к InfluxDB
    networks:
      - botnet # Подключение к сети botnet
    restart: unless-stopped # Автоматический перезапуск контейнера, если он остановится

  grafana:
    image: grafana/grafana # Образ Grafana для визуализации данных
    container_name: container_grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin # Администратор Grafana
      - GF_SECURITY_ADMIN_PASSWORD=pass # Пароль администратора Grafana
    ports:
      - "3000:3000" # Публикуем порт 3000 для доступа к Grafana через браузер
    volumes:
      - ./database/grafana:/var/lib/grafana # Сохраняем данные Grafana на локальном диске
    networks:
      - botnet # Подключение к сети botnet
    restart: unless-stopped # Автоматический перезапуск контейнера, если он остановится

networks:
  botnet:
    driver: bridge # Используем драйвер bridge для создания сети
