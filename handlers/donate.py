import logging
from typing import Any

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å: %s", __name__)

from datetime import datetime, timedelta, timezone
from aiogram import Router, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command, CommandStart, CommandObject
from aiogram.filters.state import State, StatesGroup
from aiogram.types import Message, LabeledPrice, PreCheckoutQuery, InlineKeyboardMarkup, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.utils.i18n import gettext as _



# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
donate_router = Router()

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö
donate_router.message.filter(F.chat.type == "private")

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –≤–∞–ª—é—Ç—ã
class Donate(StatesGroup):
    donate = State()

# –£—Å–ª–æ–≤–∏–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞: –≤–æ–∑–≤—Ä–∞—Ç –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π –ø–æ—Å–ª–µ –¥–æ–Ω–∞—Ç–∞
REFUND_PERIOD_DAYS = 30


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@donate_router.message(Command("donate"))
async def cmd_donate(message: Message, command: CommandObject, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã —Å—É–º–º–∞ –±—ã–ª–∞ –æ—Ç 1 –¥–æ 2500 –∑–≤—ë–∑–¥ (—Ç–∞–∫–æ–≤—ã –ª–∏–º–∏—Ç—ã Telegram API)
    if command.args is None or not command.args.isdigit() or not 1 <= int(command.args) <= 2500:
        await message.answer(text=_('–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞ –¥–æ–Ω–∞—Ç–æ–º.\n\n'
                                    '–í–≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>/donate [–ß–ò–°–õ–û]</code>\n'
                                    '–≥–¥–µ [–ß–ò–°–õ–û] —ç—Ç–æ —Å—É–º–º–∞ –¥–æ–Ω–∞—Ç–∞, –æ—Ç 1 –¥–æ 2500 ‚≠êÔ∏è \n\n'
                                    '–ü—Ä–∏–º–µ—Ä—ã:\n'
                                    '‚Ä¢ <code>/donate 10</code> - –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å 10 ‚≠êÔ∏è\n'
                                    '‚Ä¢ <code>/donate 100</code> - –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å 100 ‚≠êÔ∏è'))
        return

    # –°—É–º–º–∞ –¥–æ–Ω–∞—Ç–∞
    amount = int(command.args)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏ –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏
    kb = InlineKeyboardBuilder()
    kb.button(text=_("–û–ø–ª–∞—Ç–∏—Ç—å {amount} XTR").format(amount=amount), pay=True)  # pay=True –≤–∞–∂–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã
    kb.button(text=_("–û—Ç–º–µ–Ω–∏—Ç—å"), callback_data="donate_cancel")
    kb.adjust(1)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã
    prices = [LabeledPrice(label="XTR", amount=amount)]
    timestamp = datetime.now().strftime('%Y-%m-%d-%H-%M-%S')
    await message.answer_invoice(
        title=_("–î–æ–Ω–∞—Ç"),
        description=_("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ —Å—É–º–º—É {amount} ‚≠êÔ∏è").format(amount=amount),
        prices=prices,
        provider_token="",
        payload=timestamp,  # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ payload
        currency="XTR",
        reply_markup=kb.as_markup()
    )

    await state.set_state(Donate.donate)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –¥–æ–Ω–∞—Ç–∞, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
@donate_router.callback_query(Donate.donate, F.data == "donate_cancel")
async def on_donate_cancel(callback: CallbackQuery, state: FSMContext):
    await callback.answer(_("üò¢ –î–æ–Ω–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω."))
    await callback.message.delete()
    await state.clear()

@donate_router.message(Command('refundd'))
async def command_refund_handler(message: Message, bot: Bot, command: CommandObject) -> None:
    transaction_id = command.args if command.args else ''
    user_id = message.from_user.id
    try:
        await bot.refund_star_payment(user_id=user_id, telegram_payment_charge_id=transaction_id)
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞: %s", str(e))
        print("–û—à–∏–±–∫–∞:", e)

@donate_router.message(Command("refund"))
async def cmd_refund(message: Message, bot: Bot, command: CommandObject, state: FSMContext):
    # ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤
    t_id = command.args

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω –ª–∏ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    if t_id is None:
        await message.answer(_("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>/refund [id]</code>, "
                                "–≥–¥–µ <code>[id]</code> —ç—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ—Å–ª–µ –¥–æ–Ω–∞—Ç–∞.\n\n"
                                "/paysupport - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–ø–ª–∞—Ç—ã\n"
                                "/terms - —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"))
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Å—Ä–æ–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –∏–∑ donate_info
        data = await state.get_data()
        donate_info: dict = data.get('donate_info', {})
        timestamp: Any = donate_info.get(t_id, '')  # –ø–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏, –ø–æ id —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏

        # –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç datetime
        timestamp = datetime.strptime(timestamp, "%Y-%m-%d-%H-%M-%S")

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        current_time = datetime.now()

        # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏
        time_difference = current_time - timestamp

        if time_difference > timedelta(days=REFUND_PERIOD_DAYS):
            await message.answer(_("–°—Ä–æ–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤ –∏—Å—Ç–µ–∫. –í–æ–∑–≤—Ä–∞—Ç –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π –ø–æ—Å–ª–µ –¥–æ–Ω–∞—Ç–∞."))
            return

    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    except (ValueError, IndexError) as e:
        logger.error("–û—à–∏–±–∫–∞: %s", str(e))
        await message.answer(_("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."))
        return

    # –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤
    try:
        await bot.refund_star_payment(user_id=message.from_user.id, telegram_payment_charge_id=t_id)
        await message.answer(_("–†–µ—Ñ–∞–Ω–¥ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ. –ü–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ –∑–≤—ë–∑–¥—ã —É–∂–µ –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≤–∞—à —Å—á—ë—Ç –≤ Telegram."))

    except TelegramBadRequest as e:
        logger.error("–û—à–∏–±–∫–∞: %s", str(e))
        err_text = _("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â—ë —Ä–∞–∑.")

        if "CHARGE_ALREADY_REFUNDED" in e.message:
            err_text = _("–†–µ—Ñ–∞–Ω–¥ –ø–æ —ç—Ç–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —É–∂–µ –±—ã–ª —Ä–∞–Ω–µ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω.")

        await message.answer(err_text)
        return


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π, –±–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥
@donate_router.pre_checkout_query(Donate.donate)
async def pre_checkout_query(query: PreCheckoutQuery):
    # –ú—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–Ω–∞—Ç
    await query.answer(ok=True)

    # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω—É–∂–Ω–æ –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
    # –î–æ–±–∞–≤–ª—è–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ..
    # await query.answer(ok=False, error_message="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞ –≤ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
@donate_router.message(Donate.donate, F.successful_payment)
async def on_successfull_payment(message: Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç message.successful_payment
    t_id = message.successful_payment.telegram_payment_charge_id  # ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    invoice_payload = message.successful_payment.invoice_payload  # payload –∫–æ—Ç–æ—Ä—ã–π –º—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ä–∞–Ω–µ–µ, —Ç–∞–º –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞

    data = await state.get_data()
    donate_info = data.get('donate_info', {})
    donate_info[t_id] = invoice_payload
    await state.update_data(donate_info=donate_info)

    await message.answer(
        text=_("<b>–°–ø–∞—Å–∏–±–æ!</b>\n"
               "–í–∞—à –¥–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.\n\n"
                "ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:\n<code>{t_id}</code>").format(t_id=t_id),
        message_effect_id="5104841245755180586"
    )
        # –¥—Ä—É–≥–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–∞–¥–æ)
        # üî• –æ–≥–æ–Ω—å - 5104841245755180586
        # üëç –ª–∞–π–∫ - 5107584321108051014
        # üëé –¥–∏–∑–ª–∞–π–∫ - 5104858069142078462
        # ‚ù§Ô∏è —Å–µ—Ä–¥–µ—á–∫–æ - 5159385139981059251
        # üéâ –ø—Ä–∞–∑–¥–Ω–∏–∫ - 5046509860389126442
        # üí© –∫–∞–∫–∞—Ö–∞ - 5046589136895476101

    await state.clear()



# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –ø–æ–∫—É–ø–æ–∫
@donate_router.message(Command("paysupport"))
async def cmd_paysupport(message: Message, state: FSMContext):
    data = await state.get_data()
    donate_info = data.get('donate_info', {})
    print('donate_info:', donate_info)
    t_id = max(donate_info, key=donate_info.get) if donate_info else _('ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω')
    await message.answer(
        text=_('–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç, –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.\n\nID –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–∞—à–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:\n<code>{t_id}</code>').format(t_id=t_id))


# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ (Terms of Service)
@donate_router.message(Command("terms"))
async def cmd_terms(message: Message):
    await message.answer(_("<b>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</b>\n\n"
                            "1. –î–æ–Ω–∞—Ç—ã —è–≤–ª—è—é—Ç—Å—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–º–∏ –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π –ø–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞.\n\n"
                            "2. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ü–æ–ª—É—á–∏—Ç—å ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ /paysupport\n\n"
                            "3. –ü–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è 30 –¥–Ω–µ–π –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.\n\n"
                            "4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç —Å–æ–≥–ª–∞—Å–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏.\n\n")
                            )
