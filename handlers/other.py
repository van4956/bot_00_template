import logging

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å: %s", __name__)


from aiogram import Router, F, Bot
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.utils.i18n import gettext as _

from database.orm_users import orm_update_locale

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
other_router = Router()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@other_router.message(Command('help'))
async def process_help_command(message: Message):
    await message.answer(
        text=_('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n'
               '/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n'
               '/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞\n'
               '/language - —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\n\n'
               '/product - –≤—ã–±–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤\n'
               '/payments - –æ–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤\n'
               '/questionnaire - –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n'
               '/donate - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–Ω–∞—Ç\n'
               '/refund - –≤–æ–∑–≤—Ä–∞—Ç –¥–æ–Ω–∞—Ç–∞\n\n'
               '/ping')
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def get_keyboard():
    button_1 = InlineKeyboardButton(text=_('üá∫üá∏ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π'), callback_data='locale_en')
    button_2 = InlineKeyboardButton(text=_('üá∑üá∫ –†—É—Å—Å–∫–∏–π'), callback_data='locale_ru')
    button_3 = InlineKeyboardButton(text=_('üá©üá™ –ù–µ–º–µ—Ü–∫–∏–π'), callback_data='locale_de')

    return InlineKeyboardMarkup(inline_keyboard=[[button_1], [button_2], [button_3]])


# –≠—Ç–æ —Ö–µ–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É locale
@other_router.message(Command('language'))
async def locale_cmd(message: Message):
    await message.answer(text=_('–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫'),
                         reply_markup=get_keyboard())


@other_router.callback_query(F.data.startswith("locale_"))
async def update_locale_cmd(callback: CallbackQuery, session: AsyncSession, state: FSMContext, i18n):
    user_id = callback.from_user.id
    current_language = ''

    if callback.data == 'locale_en':
        await orm_update_locale(session, user_id, 'en')  # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å –≤ –±–¥
        await callback.message.edit_text('Choose a language ')  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.answer("Selected: üá∫üá∏ English")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–ø–ª—ã–≤–∞—à–∫—É
        await callback.message.answer("Current language \n\n üá∫üá∏ English")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await state.update_data(locale='en')  # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ

    elif callback.data == 'locale_ru':
        await orm_update_locale(session, user_id, 'ru')  # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å –≤ –±–¥
        await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ ')  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.answer("–í—ã–±—Ä–∞–Ω: üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–ø–ª—ã–≤–∞—à–∫—É
        await callback.message.answer("–¢–µ–∫—É—â–∏–π —è–∑—ã–∫ \n\n üá∑üá∫ –†—É—Å—Å–∫–∏–π")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await state.update_data(locale='ru')  # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ

    elif callback.data == 'locale_de':
        await orm_update_locale(session, user_id, 'de')  # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å –≤ –±–¥
        await callback.message.edit_text('W√§hlen Sie eine Sprache ')  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ,—Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await callback.answer("Ausgew√§hlt üá©üá™ Deutsch")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–ø–ª—ã–≤–∞—à–∫—É
        await callback.message.answer("Aktuelle Sprache \n\n üá©üá™ Deutsch")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await state.update_data(locale='de')  # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
